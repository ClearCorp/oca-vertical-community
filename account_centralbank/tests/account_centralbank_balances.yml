-
  In make the test with test1 to check his access right on res.partner
-
  !context
    uid: 'user_test1'
-
  I check the balance information of test1
-
  !python {model: res.partner}: |
    proxy = self.pool.get('ir.model.data')
    partner = proxy.get_object(cr, uid, 'account_centralbank', 'partner_test1')
    currency = proxy.get_object(cr, uid, 'account_centralbank', 'COM')
    self.write(cr, uid, [partner.id], {'centralbank_currency_ids': []})
    balance_com = False
    for balance in partner.centralbank_balance_ids:
        if balance.currency_id.id == currency.id:
            balance_com = balance
    assert (balance_com), "No balance for COM"
    assert (balance_com.available == -5050), "The available balance for test1 isn't correct"
    assert (balance_com.limit_negative_value == -10000), "The limit negative value for test1 isn't correct"
-
  I check the balance information of test2
-
  !python {model: res.partner}: |
    proxy = self.pool.get('ir.model.data')
    partner = proxy.get_object(cr, uid, 'account_centralbank', 'partner_test2')
    currency = proxy.get_object(cr, uid, 'account_centralbank', 'COM')
    self.write(cr, uid, [partner.id], {'centralbank_currency_ids': []})
    balance_com = False
    for balance in partner.centralbank_balance_ids:
        if balance.currency_id.id == currency.id:
            balance_com = balance
    assert (balance_com), "No balance for COM"
    assert (balance_com.available == 5050), "The available balance for test2 isn't correct"
    assert (balance_com.limit_positive == False), "The limit negative value for test2 isn't correct"